---
- name: Add Fleet Server
  hosts: fleet_servers
  become: yes

  vars:
    es_version: "8.9.0"
    elastic_agent_version: "{{ es_version }}"  
    elasticsearch_url: "https://localhost:9200"
    fleet_server_service_token: "YOUR_GENERATED_SERVICE_TOKEN"  # Use a generated token

  pre_tasks:
    - name: Install required system packages
      apt: 
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: yes

    - name: Download and install the public signing key
      apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present

    - name: Add the repository definition
      apt_repository:
        repo: "deb https://artifacts.elastic.co/packages/{{ es_version }}/apt stable main"
        state: present
        filename: elastic
        update_cache: yes

  tasks:
    - name: Install Elasticsearch and Kibana
      apt: 
        name:
          - elasticsearch={{ elastic_stack_version }}
          - kibana={{ elastic_stack_version }}
        state: present
        update_cache: yes

    - name: Start and enable Elasticsearch and Kibana services
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - elasticsearch
        - kibana

    # - name: Wait for Elasticsearch to start (Optional)
    #   wait_for:
    #     host: localhost
    #     port: 9200
    #     delay: 10

    - name: Download Elastic Agent
      get_url:
        url: "https://artifacts.elastic.co/downloads/beats/elastic-agent/elastic-agent-{{ elastic_stack_version }}-linux-x86_64.tar.gz"
        dest: "/tmp"

    - name: Extract Elastic Agent
      unarchive:
        src: "/tmp/elastic-agent-{{ elastic_stack_version }}-linux-x86_64.tar.gz"
        dest: "/opt"
        remote_src: yes

    - name: Install and enroll Fleet Server
      command: >
        /opt/elastic-agent-{{ elastic_agent_version }}/elastic-agent install --fleet-server-es={{ elasticsearch_url }} --fleet-server-service-token={{ fleet_server_service_token }} --fleet-server-policy="fleet-server"  --insecure

    - name: Ensure Fleet Server is running
      service:
        name: elastic-agent
        state: started
        enabled: yes