- name: Install ADCSTemplate Module
  win_copy:
    src: "files/ADCSTemplates"
    dest: "C:\\Program Files\\WindowsPowerShell\\Modules"

- name: Create a directory for templates
  win_file: 
    path: c:\setup
    state: directory

- name: Copy templates json
  win_copy:
    src: "files/{{item}}.json"
    dest: "C:\\setup\\{{item}}.json"
  loop:
    - ESC1
    - ESC2
    - ESC3
    - ESC3-CRA
    - ESC4

- name: Ensure ADCSAdministration module is present
  win_psmodule:
    name: ADCSAdministration
    state: present

- name: Install templates
  win_shell: |
    Import-Module ADCSAdministration
    $template = Get-ADCSTemplate -DisplayName "{{item}}" -ErrorAction SilentlyContinue
    if (-not $template) { 
      New-ADCSTemplate -DisplayName "{{item}}" -JSON (Get-Content c:\setup\{{item}}.json -Raw) -Identity "{{domain_name}}\Domain Users" -Publish 
    }
  vars:
    ansible_become: yes
    ansible_become_method: runas
    domain_name: "{{ root_domain }}"
    ansible_become_user: "{{ root_domain }}\\{{ domain_administrator }}"
    ansible_become_password: "{{domain_administrator_password}}"
  loop:
    - ESC1
    - ESC2
    - ESC3
    - ESC3-CRA
    - ESC4

- name: "Configure ATTRIBUTESUBJECTALTNAME2 on CA - ESC6"
  win_shell: |
    $config = certutil -config "{{cauthority_server}}\{{cauthority_common_name}}" -getreg policy\Editflags
    if ($config -notcontains "EDITF_ATTRIBUTESUBJECTALTNAME2") {
      certutil -config "{{cauthority_server}}\{{cauthority_common_name}}" -setreg policy\Editflags +EDITF_ATTRIBUTESUBJECTALTNAME2
    }
  vars:
    ansible_become: yes
    ansible_become_method: runas
    ansible_become_user: "{{domain_administrator}}"
    ansible_become_password: "{{domain_administrator_password}}"
    cauthority_server: "{{adcs_host}}"
    cauthority_common_name: "{{adcs_common_name}}"

- name: Refresh
  ansible.windows.win_command: gpupdate /force
