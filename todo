AD stuff

https://github.com/clong/DetectionLab/blob/a4fd7271271e89ea597d1513f70b3611405c0135/Proxmox/Ansible/roles/dc/tasks/main.yml#L98

    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "hyperv-set-static-ip.ps1", privileged: true, args: "-ip 192.168.56.102 -dns 8.8.8.8"
    cfg.vm.provision "shell", path: "../Vagrant/scripts/provision.ps1", privileged: true
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "../Vagrant/scripts/provision.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/download_palantir_wef.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/install-utilities.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/install-redteam.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/install-choco-extras.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/install-osquery.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/install-sysinternals.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/install-velociraptor.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/configure-ou.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/configure-wef-gpo.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/configure-powershelllogging.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/configure-AuditingPolicyGPOs.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/configure-rdp-user-gpo.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/configure-disable-windows-defender-gpo.ps1", privileged: true
    cfg.vm.provision "shell", path: "../Vagrant/scripts/install-autorunstowineventlog.ps1", privileged: true
    cfg.vm.provision "shell", inline: 'wevtutil el | Select-String -notmatch "Microsoft-Windows-LiveId" | Foreach-Object {wevtutil cl "$_"}', privileged: true
    cfg.vm.provision "shell", inline: "Set-SmbServerConfiguration -AuditSmb1Access $true -Force", privileged: true
    cfg.vm.provision "shell", inline: 'cscript c:\windows\system32\slmgr.vbs /dlv', privileged: true1

ADCS 

TASK [windows_server_adcs : Install templates] *********************************
failed: [win2019-adcs] (item=ESC1) => {"ansible_loop_var": "item", "changed": true, "cmd": "if (-not(Get-ADCSTemplate -DisplayName \"ESC1\")) { New-ADCSTemplate -DisplayName \"ESC1\" -JSON (Get-Content c:\\setup\\ESC1.json -Raw) -Identity \"cdojo\\Domain Users\" -Publish }", "delta": "0:00:01.701950", "end": "2024-06-27 19:42:23.398037", "item": "ESC1", "msg": "non-zero return code", "rc": 1, "start": "2024-06-27 19:42:21.696086", "stderr": "Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, \r\nfunction, script file, or operable program. Check the spelling of the name, or if a path was \r\nincluded, verify that the path is correct and try again.\r\nAt line:1 char:74\r\n+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...\r\n+                                                  ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept \r\n   ion\r\n    + FullyQualifiedErrorId : CommandNotFoundException", "stderr_lines": ["Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, ", "function, script file, or operable program. Check the spelling of the name, or if a path was ", "included, verify that the path is correct and try again.", "At line:1 char:74", "+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...", "+                                                  ~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept ", "   ion", "    + FullyQualifiedErrorId : CommandNotFoundException"], "stdout": "", "stdout_lines": []}
failed: [win2019-adcs] (item=ESC2) => {"ansible_loop_var": "item", "changed": true, "cmd": "if (-not(Get-ADCSTemplate -DisplayName \"ESC2\")) { New-ADCSTemplate -DisplayName \"ESC2\" -JSON (Get-Content c:\\setup\\ESC2.json -Raw) -Identity \"cdojo\\Domain Users\" -Publish }", "delta": "0:00:01.374246", "end": "2024-06-27 19:42:27.427025", "item": "ESC2", "msg": "non-zero return code", "rc": 1, "start": "2024-06-27 19:42:26.052778", "stderr": "Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, \r\nfunction, script file, or operable program. Check the spelling of the name, or if a path was \r\nincluded, verify that the path is correct and try again.\r\nAt line:1 char:74\r\n+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...\r\n+                                                  ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept \r\n   ion\r\n    + FullyQualifiedErrorId : CommandNotFoundException", "stderr_lines": ["Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, ", "function, script file, or operable program. Check the spelling of the name, or if a path was ", "included, verify that the path is correct and try again.", "At line:1 char:74", "+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...", "+                                                  ~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept ", "   ion", "    + FullyQualifiedErrorId : CommandNotFoundException"], "stdout": "", "stdout_lines": []}
failed: [win2019-adcs] (item=ESC3) => {"ansible_loop_var": "item", "changed": true, "cmd": "if (-not(Get-ADCSTemplate -DisplayName \"ESC3\")) { New-ADCSTemplate -DisplayName \"ESC3\" -JSON (Get-Content c:\\setup\\ESC3.json -Raw) -Identity \"cdojo\\Domain Users\" -Publish }", "delta": "0:00:01.390134", "end": "2024-06-27 19:42:31.487827", "item": "ESC3", "msg": "non-zero return code", "rc": 1, "start": "2024-06-27 19:42:30.097692", "stderr": "Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, \r\nfunction, script file, or operable program. Check the spelling of the name, or if a path was \r\nincluded, verify that the path is correct and try again.\r\nAt line:1 char:74\r\n+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...\r\n+                                                  ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept \r\n   ion\r\n    + FullyQualifiedErrorId : CommandNotFoundException", "stderr_lines": ["Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, ", "function, script file, or operable program. Check the spelling of the name, or if a path was ", "included, verify that the path is correct and try again.", "At line:1 char:74", "+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...", "+                                                  ~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept ", "   ion", "    + FullyQualifiedErrorId : CommandNotFoundException"], "stdout": "", "stdout_lines": []}
failed: [win2019-adcs] (item=ESC3-CRA) => {"ansible_loop_var": "item", "changed": true, "cmd": "if (-not(Get-ADCSTemplate -DisplayName \"ESC3-CRA\")) { New-ADCSTemplate -DisplayName \"ESC3-CRA\" -JSON (Get-Content c:\\setup\\ESC3-CRA.json -Raw) -Identity \"cdojo\\Domain Users\" -Publish }", "delta": "0:00:01.358911", "end": "2024-06-27 19:42:35.517627", "item": "ESC3-CRA", "msg": "non-zero return code", "rc": 1, "start": "2024-06-27 19:42:34.158716", "stderr": "Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, \r\nfunction, script file, or operable program. Check the spelling of the name, or if a path was \r\nincluded, verify that the path is correct and try again.\r\nAt line:1 char:74\r\n+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...\r\n+                                                  ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept \r\n   ion\r\n    + FullyQualifiedErrorId : CommandNotFoundException", "stderr_lines": ["Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, ", "function, script file, or operable program. Check the spelling of the name, or if a path was ", "included, verify that the path is correct and try again.", "At line:1 char:74", "+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...", "+                                                  ~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept ", "   ion", "    + FullyQualifiedErrorId : CommandNotFoundException"], "stdout": "", "stdout_lines": []}
failed: [win2019-adcs] (item=ESC4) => {"ansible_loop_var": "item", "changed": true, "cmd": "if (-not(Get-ADCSTemplate -DisplayName \"ESC4\")) { New-ADCSTemplate -DisplayName \"ESC4\" -JSON (Get-Content c:\\setup\\ESC4.json -Raw) -Identity \"cdojo\\Domain Users\" -Publish }", "delta": "0:00:01.312136", "end": "2024-06-27 19:42:39.454099", "item": "ESC4", "msg": "non-zero return code", "rc": 1, "start": "2024-06-27 19:42:38.141963", "stderr": "Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, \r\nfunction, script file, or operable program. Check the spelling of the name, or if a path was \r\nincluded, verify that the path is correct and try again.\r\nAt line:1 char:74\r\n+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...\r\n+                                                  ~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept \r\n   ion\r\n    + FullyQualifiedErrorId : CommandNotFoundException", "stderr_lines": ["Get-ADCSTemplate : The term 'Get-ADCSTemplate' is not recognized as the name of a cmdlet, ", "function, script file, or operable program. Check the spelling of the name, or if a path was ", "included, verify that the path is correct and try again.", "At line:1 char:74", "+ ... ew-Object Text.UTF8Encoding $false; if (-not(Get-ADCSTemplate -Displa ...", "+                                                  ~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (Get-ADCSTemplate:String) [], CommandNotFoundExcept ", "   ion", "    + FullyQualifiedErrorId : CommandNotFoundException"], "stdout": "", "stdout_lines": []}
...ignoring

TASK [windows_server_adcs : Configure ATTRIBUTESUBJECTALTNAME2 on CA - ESC6] ***
fatal: [win2019-adcs]: FAILED! => {"changed": true, "cmd": "certutil -config \"win2019-adcs\\cdojo-win2019-adcs-CA\" -setreg policy\\Editflags +EDITF_ATTRIBUTESUBJECTALTNAME2", "delta": "0:00:00.546764", "end": "2024-06-27 19:42:43.328308", "msg": "non-zero return code", "rc": 1, "start": "2024-06-27 19:42:42.781544", "stderr": "", "stderr_lines": [], "stdout": "CertUtil: -setreg command FAILED: 0x80070002 (WIN32: 2 ERROR_FILE_NOT_FOUND)\r\nCertUtil: The system cannot find the file specified.\r\n", "stdout_lines": ["CertUtil: -setreg command FAILED: 0x80070002 (WIN32: 2 ERROR_FILE_NOT_FOUND)", "CertUtil: The system cannot find the file specified."]}
...ignoring

Monitoring
elk & splunk

Firwall
- base image quick recovery